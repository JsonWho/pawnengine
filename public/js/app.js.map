{"version":3,"sources":["config.js","init.js","common/register_module.js","home/register_module.js","sell/register_module.js","home/config/routes.js","home/controllers/home.js","sell/config/routes.js","common/controllers/header.js","sell/controllers/templateform.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;ACAA;ACAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvlWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClfile":"app.js","sourcesContent":["'use strict';\n\nvar ApplicationConfiguration = (function() {\n\nvar ApplicationModuleName = 'pawnengine';\nvar ApplicationModuleDependencies = ['ngMaterial','ui.router'];\n\nvar registerModule = function(moduleName, moduleDependencies) {\n\n  angular.module(moduleName, moduleDependencies || []);\n\n  angular.module(ApplicationModuleName).requires.push(moduleName);\n}\n\n\n  return {\n\n    applicationModuleName : ApplicationModuleName,\n    applicationModuleDependencies : ApplicationModuleDependencies,\n    registerModule : registerModule\n  };\n\n\n})();\n\n\n\n\n","'use strict';\n\nangular.module(ApplicationConfiguration.applicationModuleName, ApplicationConfiguration.applicationModuleDependencies);\n\nangular.element(document).ready(function() {\n\n\tangular.bootstrap(document, [ApplicationConfiguration.applicationModuleName]);\n\n});","ApplicationConfiguration.registerModule('header');","ApplicationConfiguration.registerModule('home');","ApplicationConfiguration.registerModule('sell');","angular.module('home').config(function($stateProvider, $urlRouterProvider, $httpProvider) {\n\n \n  // For any unmatched url, redirect to /state1\n  $urlRouterProvider.otherwise(\"/\");\n  //\n  $stateProvider\n\n  .state('root', {\n  \turl: \"/\",\n  \tviews: {\n  \t\t'root': {templateUrl: \"/mainapp/primary.view.html\" },\n  \t\t'header@root': { templateUrl: \"/mainapp/header.view.html\" },\n  \t\t'content@root': { templateUrl: \"/mainapp/home.view.html\" }\n  \t},\n  \tparams: {\n  \t\theaderTitle: 'Just sell it!'\n  \t},\n\t      // controller: 'rootCtrl'\n\n\t  })\n\n});\n","'use strict';\n\nangular.module('home').controller('homeController',['$scope','$http', function($scope, $http) {\n\nvar vm = this;\n\n$scope.splitToArr = function(c) {\n\n\tif(!c.condition) return null;\n\n\tvar conditions = c.condition.split(';');\n\n\tvar coArr = [];\n\n\tconditions.forEach(function(condition, idx) {\n\n\n\t\tvar conArr = condition.split(',');\n\n        var co = {\n        \n        cindex : conArr[0],\n\t\toptidx : parseInt(conArr[1]),\n\t\toperator : conArr[2],\n\t\toption_value_id_arr : conArr[3].split('|'),\n\t\tbehavior : conArr[4]\n\n\t    }\n\t\t\n\t\tco.targetContainer = eval('vm.template.option_sections' + co.cindex);\n\t\tco.targetOption = co.targetContainer.options[co.optidx];\n\n\n\t\tcoArr.push(co)\n\n\n\t});\n\n\n\n\treturn coArr;\n\n}\n\n\n$scope.checkEquality = checkEquality;\n\n\n$scope.submitTemplate = function() {\n\n\tvm.template;\n\tconsole.log(vm.tForm.$valid);\n\n}\n\n\n\n vm.template = {\n\n \t\t\tid:0,\n \t\t\ttitle:'Macbook Pro',\n\n            option_sections: [\n            {\n            \tid:0,\n            \ttitle: 'Section 1',\n            \tposiiton: 1,\n\n\n\t\t\tcontainers: [\n\t\t\t{\n\t\t\t\tid:1,\n\t\t\t\ttitle: 'Condition',\n\t\t\t\tchild_containers: [\n\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\ttitle: 'Is your item new or used ?',\n\t\t\t\t\t\toptions:[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:0, type:'radiogroup', text:'select an option',  group:'itemcon', value: null,\n\t\t\t\t\t\t\t\t\t\toption_values: [{id:0, text:'item is new', value: 0 }, {id:1, text:'item is used', value: 1}]\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:1, type:'textinput', text:'select an option',  group: null, value: null, placeholder:'put some text here'\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:4, type:'multiselect', text:'select many options',  group:'checkgrp', value: null,\n\t\t\t\t\t\t\t\t\t\toption_values: [{id:4, text:'check op 1', value: 4 }, {id:5, text:'check op 2', value: 5},{id:6, text:'check op 3', value: 6 },{id:7, text:'check op 7 testing long text', value: 7 },{id:8, text:'check op 88888', value: 8 }]\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:5, type:'checkbox', text:'a checkbox', value: null\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t],\n\n\t\t\t\t\t\tchild_containers: []\n\n\t\t\t\t\t},\n\n\t\t\t\t\t//end child container 1\n\n\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\ttitle: 'Rate the condition',\n\t\t\t\t\t\t\t\t  //container position,option position within container, operator, option_value_id, behavior\n\t\t\t\t\t\tcondition:'[0].containers[0].child_containers[0],2,>==,4|8|7,show;[0].containers[0].child_containers[0],0,=,1,show;[0].containers[0].child_containers[0],3,=,true,show',\n\t\t\t\t\t\toptions:[\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:2, type:'select', text:'select an option',  group: null, value: null,\n\t\t\t\t\t\t\t\t\t\toption_values: [{id:2, text:'poor', value: 2 }, {id:3, text:'good', value: 3}]\n\t\t\t\t\t\t\t\t\t},\n\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:3, type:'textinput', text:'select an option',  group: null, value: null, placeholder:'put more text here'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t}\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t]\n\t\t\t},\n\n\t\t]\n\n\t},\n\n\n    {\n\n       id:1,\n       title:'Section Two',\n       containers: [\n\n\n       \t\t\t\t\t{\n\t\t\t\t\t\tid: 3,\n\n\n\t\t\t\t\t  child_containers: [{\n\t\t\t\t\t\tid: 3,\n\t\t\t\t\t\ttitle: '3rd container',\n\t\t\t\t\t\tcondition:'[0].containers[0].child_containers[1],1,=,hello,show',\n\n\t\t\t\t\t\t\t\t\t\t\toptions:[\n\t\t\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:6, type:'checkbox', text:'a checkbox', value: null, required: true\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:6, type:'checkbox', text:'another checkbox', value: null, required: null\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\n\n\n\n\n\t\t\t\t\t\t],\n\n\n\n\n\n\t\t\t\t\t}]\n\n\t\t\t\t}\n\n\n       ]\n\n\n    }\n\n]\n\n\n\n\n\t// option_sections: {\n\n\t// \ttitle:'Section 1',\n\t// \tcontainers: [\n\t// \t\t{\n\t// \t\t\tid:0,\n\t// \t\t\ttitle: 'Condition',\n\t// \t\t\tchild_containers: [\n\n\t// \t\t\t\t{\n\t// \t\t\t\t\tid: 1,\n\t// \t\t\t\t\ttitle: 'Is your item new or used ?',\n\t// \t\t\t\t\toptions:[\n\t// \t\t\t\t\t\t\t\t{id:0, type:'radio', text:'item is new',  group:'itemcon' value: true},\n\t// \t\t\t\t\t\t\t\t{id:0, type:'radio', text:'item is used', group:'itemcon' value: false}\n\t// \t\t\t\t\t]\n\n\t// \t\t\t\t}\n\t// \t\t\t]\n\t// \t\t}\n\t// \t]\n\n\n\n\t// }\n\n}\n\n\n\tfunction checkEquality(coArr,cc) {\n\n\t//cc - current container\n\t//co - conditin object\n\n\tif(!coArr) return true;\n\n\t// var cindex = splitArr[0];\n\n\t// var optidx = conArr[0];\n\t// var operator = conArr[1];\n\t// var option_value_id = conArr[2];\n\t// var behavior = conArr[3];\n\n\t\t// var targetContainer = eval('vm.template.containers' + co.cindex);\n\t\t// var targetOption = targetContainer.options[co.optidx];\n\n\n\n\n\n\t\t// if(co.targetContainer.disabled) return false;\n\n\t\tif(inputInValueArray(coArr)) {\n\n\t\t\tcc.disabled = false; return true;\n\t\t}\n\t\telse {\n\n\t\t\tcc.disabled = true;\n\t\t\treturn false;\n\t\t}\n\n\n\t}\n\n\tfunction inputInValueArray(coArr) {\n\n\n\t\tvar trueCount = 0;\n\t\tvar falseCount = 0;\n\n\n\t\tfor(var i = 0; i < coArr.length; i++) {\n\n\t\tvar co = coArr[i];\n\n\t\tif(co.targetContainer.disabled) { break; return false; }\n\n\t\tvar val_id_arr = co.option_value_id_arr;\n\t\tvar val_id_input = co.targetOption.value;\n\t\tvar operator = co.operator;\n\n\n\t\tif(!val_id_input) { falseCount++; continue; }\n\n\t\tif(val_id_arr.length > 1) {\n\n\t\t\t// if(val_id_input.length < val_id_arr.length) {\n\n\t\t\t// \treturn false;\n\t\t\t// }\n\n\t\t\tvar match_count = 0;\n\t\t\tfor(var m = 0; m < val_id_input.length; m++) {\n\n\t\t\t\tif(val_id_arr.includes(val_id_input[m].toString())) {\n\n\t\t\t\t\tmatch_count++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//if all valid value_id's that are present in the conditinal array are selected, even if more are selected.\n\t\t\tif(operator == '>*' && match_count == val_id_arr.length) { trueCount++; continue; }\n\n\t\t\t//if any selected value_id is present in conditinal (accepted value) array\n\t\t\tif(operator == '>n' && match_count >= 1) { trueCount++; continue; }\n\n\t\t\t//must contain all and only value_id's in the conditional array\n\t\t\tif(operator == '>==' && ( match_count == val_id_arr.length &&  val_id_input.length == val_id_arr.length )) { \n\n\t\t\t\ttrueCount++; continue; \n\t\t\t}\n\n\t\t\tfalseCount++;\n\n\t\t} else {\n\n\t\t\t val_id_arr[0].toString() == val_id_input.toString() ? trueCount++ : falseCount++;\n\n\t\t\t continue;\n\t\t}\n\n\n\t\t};\n\n\n\t     return coArr.length == trueCount;\n\n\n\t}\n\n\n\n\n\n\tfunction getTemplate() {\n\n\t\t$http.get('/templates/' + 1 ).then(\n\n\t\t\t\tfunction(res) {\n\n\t\t\t\t\tvm.template = res.data;\n\n\t\t\t},\n\t\t\t\tfunction() {\n\n\n\t\t\t});\n\t}\n\n\n\t// getTemplate();\n\n\n}]);","angular.module('sell').config(function($stateProvider, $urlRouterProvider, $httpProvider) {\n\n \n  $stateProvider\n\n  .state('root.sell', {\n  \turl: \"sell/:tname/:tid/:section_no\",\n  \tviews: {\n  \t\t'content@root': { templateUrl: \"/mainapp/templateform.view.html\" }\n  \t},\n  \tparams: {\n  \t\theaderTitle: 'Just sell it!'\n  \t}\n\t      // controller: 'rootCtrl'\n \n\t  })\n\n});\n","'use strict';\n\nangular.module('header').controller('headerController',['$scope','$http', function($scope, $http) {\n\nvar vm = this;\n\n}]);\n","'use strict';\n\n\n\nangular.module('sell').controller('templateFormController',['$scope','$http','$state', '$mdDialog', function($scope, $http, $state, $mdDialog) {\n\n\nvar vm = this;\n\nvar tid = $state.params.tid;\nvar section_no = $state.params.section_no;\n\nvm.active_section = parseInt(section_no ? section_no : 1);\n\nvm.sectionActive = function(count) {\n\n\treturn count == vm.active_section;\n}\n\n\n\nvm.showTipDialog = function(ev,tip) {\n\n\t$mdDialog.show({\n      controller: tipDialogController,\n      templateUrl: 'mainapp/tipdialog.tmp.html',\n      parent: angular.element(document.body),\n      targetEvent: ev,\n      locals: {tip:tip},\n      clickOutsideToClose:true,\n      fullscreen: false // Only for -xs, -sm breakpoints.\n    });\n   \n\n}\n\n\n\n\n\n\n\n$scope.checkEquality = checkEquality;\n\n\n$scope.nextSection = function(section,inputs) {\n\n    var isValid = true;\n\n   \tfor(var i = 0; i < inputs.length; i++) {\n\n   \t\tvar input = vm.tForm[inputs[i]];\n\n   \t\tif(input.$invalid && !input.$inputDisabled) {\n\n\t\t\tinput.$setTouched();\n\t\t\tisValid = false;\n\n   \t\t}\n   \t}\n\n\tif(isValid) vm.active_section++;\n\n\tconsole.log(vm.tForm.$valid);\n\n}\n\n\n$scope.prevSection = function() {\n\n\n\tvm.active_section--;\n\tconsole.log(vm.tForm.$valid);\n\n}\n\n\n\n vm.template = {\n\n \t\t\tid:0,\n \t\t\ttitle:'Macbook Pro',\n\n            option_sections: [\n            {\n            \tid:0,\n            \ttitle: 'Section 1',\n            \tcount: 1,\n\n\n\t\t\tcontainers: [\n\t\t\t{\n\t\t\t\tid:0,\n\t\t\t\ttitle: 'Condition',\n\t\t\t\tchild_containers: [\n\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\ttitle: 'Is your item new or used ?',\n\t\t\t\t\t\toptions:[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:0, type:'radiogroup', text:'select an option', errormsg: '{required:\"this input is required\"}',  group:'itemcon', value: null, required: true, tip: { label:'Do you need help ?', heading: 'MaBook Serial location', text: 'The serial can be found on the underside of the notebook.', image:'someimage.png' },\n\t\t\t\t\t\t\t\t\t\toption_values: [{id:0, text:'item is new', value: 0 }, {id:1, text:'item is used', value: 1}]\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:1, type:'textinput', text:'select an option',  group: null, value: null, placeholder:'put some text here',required: true, tip: { label:'Do you need help ?', heading: 'MaBook Serial location', text: 'The serial can be found on the underside of the notebook.', image:'someimage.png' }\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:4, type:'multiselect', text:'select many options',  group:'checkgrp', value: null, required: true,\n\t\t\t\t\t\t\t\t\t\toption_values: [{id:4, text:'check op 1', value: 4 }, {id:5, text:'check op 2', value: 5},{id:6, text:'check op 3', value: 6 },{id:7, text:'check op 7 testing long text', value: 7 },{id:8, text:'check op 88888', value: 8 }]\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:5, type:'checkbox', text:'a checkbox', value: null, required: true\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t],\n\n\t\t\t\t\t\tchild_containers: []\n\n\t\t\t\t\t},\n\n\t\t\t\t\t//end child container 1\n\n\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\ttitle: 'Rate the condition',\n\t\t\t\t\t\tconditions: { \n\n\t\t\t\t\t\t\t\t\t\ttarget_input_conditions: \n\t\t\t\t\t\t\t\t\t\t//check rules types: all_and_only, all_or_more, atleast_n \n\t\t\t\t\t\t\t\t\t\t[ \n\t\t\t\t\t\t\t\t\t\t\t{ input_name: 'multiselect_4',input_value_check_rule: 'all_and_only', test_array: [4,8,7], behavior: 'hide', container_id: 1},\n\t\t\t\t\t\t\t\t\t\t\t{ input_name: 'radiogroup_0',input_value_check_rule: 'equals', test_value: 1, behavior: 'disable', container_id: 1},\n\t\t\t\t\t\t\t\t\t\t\t{ input_name: 'checkbox_5',input_value_check_rule: 'equals', test_value: true, behavior: 'disable', container_id: 1},\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t],\n\n\t\t\t\t\t\t\t\t\t  input_check_rule: '>=2'\n\t\t\t\t\t\t\t\t\t},\n\n\n\n\t\t\t\t\t\t\t\t  //container position,option position within container, operator, option_value_id, behavior, container_id\n\t\t\t\t\t\t// condition:'multiselect_4,>==,4|8|7,show,1;radiogroup_0,=,1,disable,1;checkbox_5,=,true,disable,1~>=2',\n\t\t\t\t\t\toptions:[\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:2, type:'select', text:'select an option',  group: null, value: null, required: true,\n\t\t\t\t\t\t\t\t\t\toption_values: [{id:2, text:'poor', value: 2 }, {id:3, text:'good', value: 3}]\n\t\t\t\t\t\t\t\t\t},\n\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:3, type:'textinput', text:'select an option',  group: null, value: null, placeholder:'put more text here', required: true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t}\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t]\n\t\t\t},\n\n\t\t]\n\n\t},\n\n\n    {\n\n       id:1,\n       title:'Section Two',\n       count: 2,\n       containers: [\n\n\n       \t\t\t\t\t{\n\t\t\t\t\t\tid: 3,\n\n\n\t\t\t\t\t  child_containers: [{\n\t\t\t\t\t\tid: 4,\n\t\t\t\t\t\ttitle: '3rd container',\n\t\t\t\t\t\tconditions: { target_input_conditions: \n\t\t\t\t\t\t\t\t\t\t[ \n\t\t\t\t\t\t\t\t\t\t\t{ input_name: 'textinput_3', input_value_check_rule: 'equals', test_value: 'hello', behavior: 'disable', container_id: 2}\n\n\t\t\t\t\t\t\t\t\t\t],\n\n\t\t\t\t\t\t\t\t\t  input_check_rule: '=='\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\toptions:[\n\t\t\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:6, type:'checkbox', text:'a checkbox', value: null, required: true\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:6, type:'checkbox', text:'another checkbox', value: null, required: true\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\n\n\n\n\n\t\t\t\t\t\t],\n\n\n\n\n\n\t\t\t\t\t}]\n\n\t\t\t\t}\n\n\n       ]\n\n\n    }\n\n]\n\n\n\n\n\t// option_sections: {\n\n\t// \ttitle:'Section 1',\n\t// \tcontainers: [\n\t// \t\t{\n\t// \t\t\tid:0,\n\t// \t\t\ttitle: 'Condition',\n\t// \t\t\tchild_containers: [\n\n\t// \t\t\t\t{\n\t// \t\t\t\t\tid: 1,\n\t// \t\t\t\t\ttitle: 'Is your item new or used ?',\n\t// \t\t\t\t\toptions:[\n\t// \t\t\t\t\t\t\t\t{id:0, type:'radio', text:'item is new',  group:'itemcon' value: true},\n\t// \t\t\t\t\t\t\t\t{id:0, type:'radio', text:'item is used', group:'itemcon' value: false}\n\t// \t\t\t\t\t]\n\n\t// \t\t\t\t}\n\t// \t\t\t]\n\t// \t\t}\n\t// \t]\n\n\n\n\t// }\n\n}\n\n\n\tfunction checkEquality(cc) {\n\n\t//cc - current container\n\t//co - conditin object\n\n\tif(!cc.conditions) return true;\n\n\n\t// var cindex = splitArr[0];\n\n\t// var optidx = conArr[0];\n\t// var operator = conArr[1];\n\t// var option_value_id = conArr[2];\n\t// var behavior = conArr[3];\n\n\t\t// var targetContainer = eval('vm.template.containers' + co.cindex);\n\t\t// var targetOption = targetContainer.options[co.optidx];\n\n\n\n\n\n\t\t// if(co.targetContainer.disabled) return false;\n\t\tvar coArr = cc.conditions.target_input_conditions;\n\t\tvar inputRules = cc.conditions.input_check_rule;\n\t\tvar cIdentifier = 'container_'+cc.id+'_show';\n\t\tvar displayContainer = checkContainerConditions(coArr,cc,inputRules);\n\n\t\t//return if whether container should be visible\n\t\tif(displayContainer) {\n\n\t\t\tvm.tForm[cIdentifier] = true;\n\n\t\t\t//show ?\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\n\t\t\tvm.tForm[cIdentifier] = displayContainer;\n\t\t\t//show ?\n\t\t\treturn displayContainer;\n\t\t}\n\n\n\t}\n\n\tfunction checkContainerConditions(coArr,cc,inputRules) {\n\n\n\t\tvar trueCount = 0;\n\t\tvar falseCount = 0;\n\n\t\tvar displayContainer;\n\t\n\t\t//check each condition object for container and evaluate expected values specified in condition against those which the 'controller input' model is set to. \n\t\t//if condition is satisfied increment trueCount, else falseCount.\n\t\tfor(var i = 0; i < coArr.length; i++) {\n\n\t\tvar co = coArr[i];\n\n\t\t//the 'controller / target' input (in a different container!), the state or value of which decides whether the current condition (co) is satisfied\n\t\tif(!co.targetOption) co.targetOption = vm.tForm[co.input_name];\n\n\t\t//if the 'controller' input is disabled, check if its parent container is hidden. If hidden, this sets displayContainer to false, even if this condition only has 'disable' specified.\n\t\t//when \n\t\tif(co.targetOption.$inputDisabled) { \n\n\t\t\tvar cIdentifier =  'container_'+co.container_id+'_show';\n\t\t\tif(vm.tForm[cIdentifier] !== undefined && vm.tForm[cIdentifier] == false) {displayContainer = false;}\n\t\t\telse { displayContainer = setDisplayContainer(displayContainer, co.behavior); }\n\n\t\t\tfalseCount++; continue; \n\t\t}\n\n\t\tvar val_id_input = co.targetOption.$modelValue;\n\t\tvar check_type = co.input_value_check_rule;\n\n\n\t\tif(!val_id_input) { displayContainer = setDisplayContainer(displayContainer, co.behavior); falseCount++; continue; }\n\n\t\tif(co.test_array && co.test_array.length > 1) {\n\n\t\t    var val_id_arr = co.test_array;\n\n\t\t\tvar match_count = 0;\n\t\t\tfor(var m = 0; m < val_id_input.length; m++) {\n\n\t\t\t\tif(val_id_arr.includes(val_id_input[m])) {\n\n\t\t\t\t\tmatch_count++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//if all valid value_id's that are present in the test array are selected, even if more are selected.\n\t\t\t// if(check_type == 'all_or_more' && match_count == val_id_arr.length) { trueCount++; continue; }\n\n\t\t\t//if any selected value_id is present in test (accepted value) array\n\t\t\tif(check_type == 'atleast_n' && match_count >= parseInt(check_type.substr(8,8))) { trueCount++; continue; }\n\n\t\t\t//must contain all and only value_id's in the test array\n\t\t\tif(check_type == 'all_and_only' && ( match_count == val_id_arr.length &&  val_id_input.length == val_id_arr.length )) { \n\n\t\t\t\ttrueCount++; continue; \n\t\t\t}\n\n\t\t\tfalseCount++;\n\n\t\t\tdisplayContainer = setDisplayContainer(displayContainer, co.behavior);\n\n\n\t\t} else {\n\n\t\t\t if(co.test_value.toString().toLowerCase() == val_id_input.toString().toLowerCase()) { \n\n\t\t\t \ttrueCount++;\n\n\t\t\t } else { \n\n\t\t\t \tfalseCount++; \n\n\t\t\t \tdisplayContainer = setDisplayContainer(displayContainer, co.behavior);\n\n\t\t\t }\n\n\t\t\t continue;\n\t\t}\n\n\n\t\t};\n\n\t\t//all must be valid - any single one or at least n number - \n\t\t\tif(inputRules == '==' && coArr.length == trueCount) {\n\n\t\t\t     \ttoggleInputs(cc, false);\n\t\t\t     \tdisplayContainer = true;\n\t\t \t} else if (inputRules.indexOf('>=') == 0 && trueCount >= parseInt(inputRules.substr(2,2))) {\n\n\t\t \t\t\ttoggleInputs(cc, false);\n\t\t\t     \tdisplayContainer = true;\n\n\t\t \t} else {\n\n\t\t\t     \ttoggleInputs(cc, true);\n\t\t\t     }\n\n\n\t\t    return displayContainer;\t     \n\n\t}\n\n\tfunction toggleInputs(cc,val) {\n\n\t\tfor(var i = 0; i < cc.options.length; i++) {\n\n\t\t\tvar option = cc.options[i];\n\t\t\toption.disabled = val;\n\t\t\tvar input_name = option.type + '_' + option.id;\n\t\t\tif(vm.tForm[input_name]) vm.tForm[input_name].$inputDisabled = val;\n\n\t\t}\n\t}\n\n\tfunction setDisplayContainer(displayContainer, behavior) {\n\n\t\t\t\t\t//if condition not satisfied, decide whether to hide the container\n\t\t\tif(displayContainer !== false && behavior == 'disable') {\n\n\t\t\t\tdisplayContainer = true;\n\t\t\t} else {\n\n\t\t\t\tdisplayContainer = false;\n\t\t\t}\n\n\t\t\treturn displayContainer;\n\t}\n\n\n\n\n\n\tfunction getTemplate() {\n\n\t\t$http.get('/templates/' + 1 ).then(\n\n\t\t\t\tfunction(res) {\n\n\t\t\t\t\tvm.template = res.data;\n\n\t\t\t},\n\t\t\t\tfunction() {\n\n\n\t\t\t});\n\t}\n\n\n\t// getTemplate();\n\n\n\n\t  function tipDialogController($scope, $mdDialog, tip) {\n\n\t  \t\t$scope.tip = tip;\n\t  \t\t\n\t\t    $scope.cancel = function() {\n\t\t      $mdDialog.cancel();\n\t\t    };\n\n  \t\t}\n\n\n\n\n\n}]);\n\n\n\n"],"sourceRoot":"/source/"}