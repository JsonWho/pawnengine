{"version":3,"sources":["config.js","init.js","home/register_module.js","common/register_module.js","template_editor/register_module.js","home/config/routes.js","home/controllers/home.js","template_editor/config/routes.js","template_editor/controllers/template_editor.js","common/controllers/header.js","common/controllers/root.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;ACAA;ACAA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClhzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"admin_area.js","sourcesContent":["'use strict';\n\nvar ApplicationConfiguration = (function() {\n\nvar ApplicationModuleName = 'pawnengine_admin';\nvar ApplicationModuleDependencies = ['ngMaterial','ui.router'];\n\nvar registerModule = function(moduleName, moduleDependencies) {\n\n  angular.module(moduleName, moduleDependencies || []);\n\n  angular.module(ApplicationModuleName).requires.push(moduleName);\n}\n\n\n  return {\n\n    applicationModuleName : ApplicationModuleName,\n    applicationModuleDependencies : ApplicationModuleDependencies,\n    registerModule : registerModule\n  };\n\n\n})();\n\n\n\n\n","'use strict';\n\nangular.module(ApplicationConfiguration.applicationModuleName, ApplicationConfiguration.applicationModuleDependencies);\n\nangular.element(document).ready(function() {\n\n\tangular.bootstrap(document, [ApplicationConfiguration.applicationModuleName]);\n\n});","ApplicationConfiguration.registerModule('home');","ApplicationConfiguration.registerModule('header');","ApplicationConfiguration.registerModule('template_editor');\n","angular.module('home').config(function($stateProvider, $urlRouterProvider, $httpProvider) {\n\n \n  // For any unmatched url, redirect to /state1\n  $urlRouterProvider.otherwise(\"/\");\n  //\n  $stateProvider\n\n  .state('root', {\n  \turl: \"/\",\n  \tviews: {\n  \t\t'root': {templateUrl: \"/admin/primary.view.html\" },\n  \t\t'header@root': { templateUrl: \"/admin/header.view.html\" },\n  \t\t'content@root': { templateUrl: \"/admin/home.view.html\" }\n  \t},\n  \tparams: {\n  \t\theaderTitle: 'Overview'\n  \t},\n\t      // controller: 'rootCtrl'\n\n\t  })\n\n});\n","'use strict';\n\nangular.module('home').controller('homeController',['$scope','$http', function($scope, $http) {\n\n\n}]);","angular.module('template_editor').config(function($stateProvider, $urlRouterProvider, $httpProvider) {\n\n \n  $stateProvider\n\n  .state('root.template_editor', {\n  \turl: \"template_editor/:tid\",\n  \tviews: {\n  \t\t'content@root': { templateUrl: \"/admin/template_editor.view.html\" }\n  \t},\n  \tparams: {\n  \t\theaderTitle: 'Template Editor'\n  \t}\n\t      // controller: 'rootCtrl'\n\n\t  })\n\n});\n","'use strict';\n\n\n\nangular.module('template_editor').controller('templateEditorController',['$scope','$http','$state', '$mdDialog', function($scope, $http, $state, $mdDialog) {\n\n\nvar vm = this;\n\nvar tid = $state.params.tid;\nvar section_no = $state.params.section_no;\n\nvm.active_section = parseInt(section_no ? section_no : 1);\n\nvm.sectionActive = function(count) {\n\n\treturn count == vm.active_section;\n}\n\n\nvm.showTipDialog = function(ev,tip) {\n\n\t$mdDialog.show({\n      controller: tipDialogController,\n      templateUrl: 'mainapp/tipdialog.tmp.html',\n      parent: angular.element(document.body),\n      targetEvent: ev,\n      locals: {tip:tip},\n      clickOutsideToClose:true,\n      fullscreen: false // Only for -xs, -sm breakpoints.\n    });\n   \n\n}\n\n\nvm.addEditInput = function(ev, cc, input) {\n\n\t$mdDialog.show({\n      controller: addInputDialogController,\n      templateUrl: 'admin/add_input.tmp.html',\n      parent: angular.element(document.body),\n      targetEvent: ev,\n      locals: {container:cc, input: input},\n      clickOutsideToClose:true,\n      fullscreen: false // Only for -xs, -sm breakpoints.\n    });\n}\n\nvm.delInput = function($event, cc, $index) {\n\n\tvar promise = $scope.showConfirm($event, 'Delete this input ?');\n\n\tpromise.then(function() {\n\n\t\t\tcc.inputs.splice($index,1);\n\n\n\t}, function() {});\n\n}\n\n\n\n\n\n\nvm.checkEquality = checkEquality;\n\n\n$scope.nextSection = function(section,inputs) {\n\n    var isValid = true;\n\n   \tfor(var i = 0; i < inputs.length; i++) {\n\n   \t\tvar input = vm.tForm[inputs[i]];\n\n   \t\tif(input.$invalid && !input.$inputDisabled) {\n\n\t\t\tinput.$setTouched();\n\t\t\tisValid = false;\n\n   \t\t}\n   \t}\n\n\tif(isValid) vm.active_section++;\n\n\tconsole.log(vm.tForm.$valid);\n\n}\n\n\n$scope.prevSection = function() {\n\n\n\tvm.active_section--;\n\tconsole.log(vm.tForm.$valid);\n\n}\n\n\n\n vm.template = {\n\n \t\t\tid:0,\n \t\t\ttitle:'Macbook Pro',\n\n            sections: [\n            {\n            \tid:0,\n            \ttitle: 'Section 1',\n            \tcount: 1,\n\n\n\t\t\tcontainers: [\n\t\t\t{\n\t\t\t\tid:0,\n\t\t\t\ttitle: 'Condition',\n\t\t\t\tchild_containers: [\n\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\ttitle: 'Is your item new or used ?',\n\t\t\t\t\t\tinputs:[\n\n\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:0, type:'radiogroup', text:'select an option', errormsg: '{required:\"this input is required\"}',  group:'itemcon', value: null, required: true, tip: { label:'Do you need help ?', heading: 'MaBook Serial location', text: 'The serial can be found on the underside of the notebook.', image:'someimage.png' },\n\t\t\t\t\t\t\t\t\t\toptions: [{id:0, text:'item is new', value: 0 }, {id:1, text:'item is used', value: 1}]\n\t\t\t\t\t\t\t\t\t},\n\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:1, type:'text', text:'select an option',  group: null, value: null, placeholder:'put some text here',required: true, tip: { label:'Do you need help ?', heading: 'MaBook Serial location', text: 'The serial can be found on the underside of the notebook.', image:'someimage.png' }\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:4, type:'multiselect', text:'select many inputs',  group:'checkgrp', value: null, required: true,\n\t\t\t\t\t\t\t\t\t\toptions: [{id:4, text:'check op 1', value: 4 }, {id:5, text:'check op 2', value: 5},{id:6, text:'check op 3', value: 6 },{id:7, text:'check op 7 testing long text', value: 7 },{id:8, text:'check op 88888', value: 8 }]\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:55, type:'checkbox', text:'old checkbox', value: null, required: true\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\n\n\t\n\t\t\t\t\t\t],\n\n\t\t\t\t\t\tchild_containers: [{id:77,title:'sub-sub-sub', inputs: [{id:95, type:'checkbox', text:'subby checkbox', value: null, required: true}]  }]\n\n\t\t\t\t\t},\n\n\t\t\t\t\t//end child container 1\n\n\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\ttitle: 'Rate the condition',\n\t\t\t\t\t\tconditions: { \n\n\t\t\t\t\t\t\t\t\t\ttarget_input_conditions: \n\t\t\t\t\t\t\t\t\t\t//check rules types: all_and_only, all_or_more, atleast_n \n\t\t\t\t\t\t\t\t\t\t[ \n\t\t\t\t\t\t\t\t\t\t\t{ input_name: 'multiselect_4',input_value_check_rule: 'all_and_only', test_array: [4,8,7], behavior: 'hide', container_id: 1},\n\t\t\t\t\t\t\t\t\t\t\t{ input_name: 'radiogroup_0',input_value_check_rule: 'equals', test_value: 1, behavior: 'disable', container_id: 1},\n\t\t\t\t\t\t\t\t\t\t\t{ input_name: 'checkbox_55',input_value_check_rule: 'equals', test_value: true, behavior: 'disable', container_id: 1},\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t],\n\n\t\t\t\t\t\t\t\t\t  input_check_rule: '>=2'\n\t\t\t\t\t\t\t\t\t},\n\n\n\n\t\t\t\t\t\t\t\t  //container position,option position within container, operator, option_value_id, behavior, container_id\n\t\t\t\t\t\t// condition:'multiselect_4,>==,4|8|7,show,1;radiogroup_0,=,1,disable,1;checkbox_5,=,true,disable,1~>=2',\n\t\t\t\t\t\tinputs:[\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:2, type:'select', text:'select an option',  group: null, value: null, required: true,\n\t\t\t\t\t\t\t\t\t\toptions: [{id:2, text:'poor', value: 2 }, {id:3, text:'good', value: 3}]\n\t\t\t\t\t\t\t\t\t},\n\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:3, type:'text', text:'select an option',  group: null, value: null, placeholder:'put more text here', required: true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t}\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t]\n\t\t\t},\n\n\t\t]\n\n\t},\n\n\n    {\n\n       id:1,\n       title:'Section Two',\n       count: 2,\n       containers: [\n\n\n       \t\t\t\t\t{\n\t\t\t\t\t\tid: 3,\n\n\n\t\t\t\t\t  child_containers: [{\n\t\t\t\t\t\tid: 4,\n\t\t\t\t\t\ttitle: '3rd container',\n\t\t\t\t\t\tconditions: { target_input_conditions: \n\t\t\t\t\t\t\t\t\t\t[ \n\t\t\t\t\t\t\t\t\t\t\t{ input_name: 'text_3', input_value_check_rule: 'equals', test_value: 'hello', behavior: 'disable', container_id: 2}\n\n\t\t\t\t\t\t\t\t\t\t],\n\n\t\t\t\t\t\t\t\t\t  input_check_rule: '=='\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\tinputs:[\n\t\t\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:6, type:'checkbox', text:'a checkbox', value: null, required: true\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid:7, type:'checkbox', text:'another checkbox', value: null, required: true\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\n\n\n\n\n\t\t\t\t\t\t],\n\n\n\n\n\n\t\t\t\t\t}]\n\n\t\t\t\t}\n\n\n       ]\n\n\n    }\n\n]\n\n\n\n\n\t// sections: {\n\n\t// \ttitle:'Section 1',\n\t// \tcontainers: [\n\t// \t\t{\n\t// \t\t\tid:0,\n\t// \t\t\ttitle: 'Condition',\n\t// \t\t\tchild_containers: [\n\n\t// \t\t\t\t{\n\t// \t\t\t\t\tid: 1,\n\t// \t\t\t\t\ttitle: 'Is your item new or used ?',\n\t// \t\t\t\t\tinputs:[\n\t// \t\t\t\t\t\t\t\t{id:0, type:'radio', text:'item is new',  group:'itemcon' value: true},\n\t// \t\t\t\t\t\t\t\t{id:0, type:'radio', text:'item is used', group:'itemcon' value: false}\n\t// \t\t\t\t\t]\n\n\t// \t\t\t\t}\n\t// \t\t\t]\n\t// \t\t}\n\t// \t]\n\n\n\n\t// }\n\n}\n\n\n\tfunction checkEquality(cc) {\n\n\t//cc - current container\n\t//co - conditin object\n\n\tif(!cc.conditions) return true;\n\n\t\tvar coArr = cc.conditions.target_input_conditions;\n\t\tvar inputRules = cc.conditions.input_check_rule;\n\t\tvar cIdentifier = 'container_'+cc.id+'_show';\n\t\tvar displayContainer = checkContainerConditions(coArr,cc,inputRules);\n\n\t\t//return if whether container should be visible\n\t\tif(displayContainer) {\n\n\t\t\tvm.tForm[cIdentifier] = true;\n\n\t\t\t//show ?\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\n\t\t\tvm.tForm[cIdentifier] = displayContainer;\n\t\t\t//show ?\n\t\t\treturn displayContainer;\n\t\t}\n\n\n\t}\n\n\tfunction checkContainerConditions(coArr,cc,inputRules) {\n\n\n\t\tvar trueCount = 0;\n\t\tvar falseCount = 0;\n\n\t\tvar displayContainer;\n\n\t\t$scope.thisIsParent = true;\n\t\n\t\t//check each condition object for container and evaluate expected values specified in condition against those which the 'controller input' model is set to. \n\t\t//if condition is satisfied increment trueCount, else falseCount.\n\t\tfor(var i = 0; i < coArr.length; i++) {\n\n\t\tvar co = coArr[i];\n\n\t\t//the 'controller / target' input (in a different container!), the state or value of which decides whether the current condition (co) is satisfied\n\t\t// co.targetInput = co.targetInput ? co.targetInput : vm.tForm[co.input_name];\n\t\tco.targetInput = vm.tForm[co.input_name];\n\n\t\t//if the 'controller' input is disabled, check if its parent container is hidden. If hidden, this sets displayContainer to false, even if this condition only has 'disable' specified.\n\t\t//when \n\t\tif(co.targetInput.$inputDisabled) { \n\n\t\t\tvar cIdentifier =  'container_'+co.container_id+'_show';\n\t\t\tif(vm.tForm[cIdentifier] !== undefined && vm.tForm[cIdentifier] == false) {displayContainer = false;}\n\t\t\telse { displayContainer = setDisplayContainer(displayContainer, co.behavior); }\n\n\t\t\tfalseCount++; continue; \n\t\t}\n\n\t\tvar val_id_input = co.targetInput.$modelValue;\n\t\tvar check_type = co.input_value_check_rule;\n\n\n\t\tif(!val_id_input) { displayContainer = setDisplayContainer(displayContainer, co.behavior); falseCount++; continue; }\n\n\t\tif(co.test_array && co.test_array.length > 1) {\n\n\t\t    var val_id_arr = co.test_array;\n\n\t\t\tvar match_count = 0;\n\t\t\tfor(var m = 0; m < val_id_input.length; m++) {\n\n\t\t\t\tif(val_id_arr.includes(val_id_input[m])) {\n\n\t\t\t\t\tmatch_count++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//if all valid value_id's that are present in the test array are selected, even if more are selected.\n\t\t\t// if(check_type == 'all_or_more' && match_count == val_id_arr.length) { trueCount++; continue; }\n\n\t\t\t//if any selected value_id is present in test (accepted value) array\n\t\t\tif(check_type == 'atleast_n' && match_count >= parseInt(check_type.substr(8,8))) { trueCount++; continue; }\n\n\t\t\t//must contain all and only value_id's in the test array\n\t\t\tif(check_type == 'all_and_only' && ( match_count == val_id_arr.length &&  val_id_input.length == val_id_arr.length )) { \n\n\t\t\t\ttrueCount++; continue; \n\t\t\t}\n\n\t\t\tfalseCount++;\n\n\t\t\tdisplayContainer = setDisplayContainer(displayContainer, co.behavior);\n\n\n\t\t} else {\n\n\t\t\t if(co.test_value.toString().toLowerCase() == val_id_input.toString().toLowerCase()) { \n\n\t\t\t \ttrueCount++;\n\n\t\t\t } else { \n\n\t\t\t \tfalseCount++; \n\n\t\t\t \tdisplayContainer = setDisplayContainer(displayContainer, co.behavior);\n\n\t\t\t }\n\n\t\t\t continue;\n\t\t}\n\n\n\t\t};\n\n\t\t//all must be valid - any single one or at least n number - \n\t\t\tif(inputRules == '==' && coArr.length == trueCount) {\n\n\t\t\t     \ttoggleInputs(cc, false);\n\t\t\t     \tdisplayContainer = true;\n\t\t \t} else if (inputRules.indexOf('>=') == 0 && trueCount >= parseInt(inputRules.substr(2,2))) {\n\n\t\t \t\t\ttoggleInputs(cc, false);\n\t\t\t     \tdisplayContainer = true;\n\n\t\t \t} else {\n\n\t\t\t     \ttoggleInputs(cc, true);\n\t\t\t     }\n\n\n\t\t    return displayContainer;\t     \n\n\t}\n\n\tfunction toggleInputs(cc,val) {\n\n\t\tfor(var i = 0; i < cc.inputs.length; i++) {\n\n\t\t\tvar input = cc.inputs[i];\n\t\t\tinput.disabled = val;\n\t\t\tvar input_name = input.type + '_' + input.id;\n\t\t\tif(vm.tForm[input_name]) vm.tForm[input_name].$inputDisabled = val;\n\n\t\t}\n\t}\n\n\tfunction setDisplayContainer(displayContainer, behavior) {\n\n\t\t\t\t\t//if condition not satisfied, decide whether to hide the container\n\t\t\tif(displayContainer !== false && behavior == 'disable') {\n\n\t\t\t\tdisplayContainer = true;\n\t\t\t} else {\n\n\t\t\t\tdisplayContainer = false;\n\t\t\t}\n\n\t\t\treturn displayContainer;\n\t}\n\n\n\n\n\n\tfunction getTemplate() {\n\n\t\t$http.get('/templates/' + 1 ).then(\n\n\t\t\t\tfunction(res) {\n\n\t\t\t\t\tvm.template = res.data;\n\n\t\t\t},\n\t\t\t\tfunction() {\n\n\n\t\t\t});\n\t}\n \n\n\t// getTemplate();\n\n\n\n\t  function tipDialogController($scope, $mdDialog, tip) {\n\n\t  \t\t$scope.tip = tip;\n\n\t\t    $scope.cancel = function() {\n\t\t      $mdDialog.cancel();\n\t\t    };\n\n  \t\t}\n\n\n\n  \t\t   vm.initInputPosition = function(input, index) {\n\n\t\t    \t\tinput.position = index + 1;\n\t\t    \t\treturn input.position;\n\t\t    }\n\n\n\n  \t    function addInputDialogController($scope, $mdDialog, container, input) {\n\n  \t        $scope.container = container;\n\n\t  \t\t$scope.input_types = [{name:'radiogroup', dname: 'radio group'},{name:'checkbox', dname: 'Checkbox'},{name:'text', dname: 'Text'} ,{name:'select', dname: 'Select list'},{ name:'multiselect', dname: 'Muli-Select list'}];\n\n\n  \t        $scope.initTemplate = function() {\n\n\t\t  \t         if(input && !$scope.newinput) {\n  \t      \t\t\t\t\n  \t      \t\t\t\t$scope.max_position = container.inputs.length;\n\t\t  \t         \t$scope.newinput  = angular.copy(input);\n\t\t  \t         \t$scope.isUpdate = true;\n\n\t\t  \t         } else if(!$scope.newinput) {\n\n\t\t  \t         \t\t\tvar position = container.inputs.length + 1;\n\t\t  \t         \t\t\t$scope.max_position = position;\n\t\t  \t         \t\t\t$scope.total_inputs = $scope.total_inputs + 1;\n\n\t\t\t\t  \t         \t$scope.newinput = { \n\t\t\t\t  \t         \t\t\ttype: 'checkbox' ,\n\t\t\t\t  \t         \t\t\tvalue: null,\n\t\t\t\t  \t         \t\t\tposition: position\n\n\t\t\t\t  \t         };\n\n\t\t  \t          } else {\n\n\t\t  \t          \t$scope.newinput.value = null;\n\n\t\t  \t          }\n\n\n\t\t  \t          if($scope.newinput.type == 'multiselect') {\n\n\t\t  \t          \tvar copy;\n\n\t\t  \t          \tif($scope.newinput.value && !Array.isArray($scope.newinput.value)) {\n\n\t\t  \t          \t    copy = angular.copy($scope.newinput.value);\n\t\t  \t          \t}\n\n\t\t  \t          \tif(!$scope.newinput.value || !Array.isArray($scope.newinput.value)) $scope.newinput.value = [];\n\n\n\t\t  \t          \tif(copy) { $scope.newinput.value = $scope.newinput.value.push(copy); }\n\n\n\t\t  \t          }\n\n\n\n\t\t  \t          $scope.active_option =  {};\t\t  \t          \n\t\t  \t          $scope.newinput.options = $scope.newinput.options ? $scope.newinput.options : [];\n\n\n  \t        }\n\n\n  \t        $scope.initTemplate();\n\n\t  \t\t\n\t\t    $scope.cancel = function() {\n\t\t      $mdDialog.cancel();\n\t\t    };\n\n\n\t\t    $scope.addInput = function(newinput, update) {\n\n\n\t\t    \t\t\t\t$scope.input_form.$setSubmitted();\n\n\t\t\t\t    \t\tif($scope.input_form.$valid) {\n\n\t\t\t\t    \t\t var input_type = $scope.newinput.type;\n\t\t\t\t    \t     var inputs_with_options = ['select','multiselect','radiogroup'];\n\n\n\t\t\t\t    \t    // if(input_type == 'select') {\n\n\t\t\t\t    \t    // \tif(!selected_value) { $scope.newinput.value == null; }\n\t\t\t\t    \t    // \telse {\n\n\t\t\t\t    \t    // \t\tnewinput.value = selected_value;\n\t\t\t\t    \t    // \t}\n\t\t\t\t    \t    // }\n\n\n\t\t\t\t\t    \tif(!inputs_with_options.includes(input_type)) {\n\n\t\t\t\t\t    \t\tdelete newinput.options;\n\t\t\t\t\t    \t}\n\n\n\t\t\t\t\t    \t\tif(!update) {\n\n\t\t\t\t\t    \t\tvar index = newinput.position ? (newinput.position - 1) : container.inputs.length;\n\t\t\t\t\t    \t\tcontainer.inputs.splice(index, 0 , newinput);\n\t\t\t\t\t    \t\t$scope.newinput = { type: input_type };\n\t\t\t\t\t    \t\t$scope.input_form.$setPristine(true);\n\t\t\t\t\t    \t    $scope.input_form.$setUntouched(true);\n\n\n\t\t\t\t\t    \t} else if(update) {\n\n\t\t\t\t\t    \t\tangular.copy($scope.newinput, input);\n\n\t\t\t\t\t    \t}\n\n\n\t\t\t\t    \t}\n\t\t    }\n\n\n\t\t    $scope.changePosition = function(newinput) {\n\n\n\t\t    \tvar position = newinput.position - 1;\n\n\t\t    \tif(input && position <= container.inputs.length) {\n\n\t\t\t\t\t    container.inputs.splice((input.position - 1), 1);\n\t\t\t\t\t    container.inputs.splice(position, 0, input);\n\t\t\t\t\t    input.position = (position + 1);\n\t\t    \t}\n\t\t    }\n\n\n\n\n\t\t    //option functions\n\t\t    $scope.addOption = function() {\n\n\t\t        if($scope.option_form.option_text.$invalid) return;\n\n\t\t    \tvar copy = angular.copy($scope.active_option);\n\n\t\t    \tcopy.value = 'x' + Math.random(3,222);\n\n\t\t    \t$scope.newinput.options.push(copy);\n\t\t    \t$scope.active_option = {};\n\t\t    \t$scope.selectedOption = {};\n\n\t\t    \tif($scope.newinput.type == 'select') {\n\t\t    \t$scope.newinput.value = copy.value;\n\t\t    \t}\n\n\t\t    \telse if($scope.newinput.type == 'multiselect') {\n\t\t    \t$scope.current_value = copy.value;\n\t\t    \t}\n\n\n\n\t\t    \t$scope.setOption(copy.value);\n\t\t    }\n\n\n\t\t    //for select list to display mark or style for select option\n\t\t    $scope.checkIfSelected = function(val) {\n\t\t    \tif(!val) return false;\n\t\t    \treturn $scope.newinput.value.includes(val);\n\t\t    }\n\n\t\t    //toggle checkbox and remove or add value in value array\n\t\t    $scope.toggleSelected = function(optionSelected) {\n\n\t\t    if(optionSelected) {\n\n\t\t    \t$scope.newinput.value.push($scope.selectedOption.value);\n\t\t    \t// $scope.optionSelected = true;\n\n\t\t    }\telse {\n\n\t\t    \t  $scope.newinput.value = $scope.newinput.value.filter(function(itm, idx) {\n\n\t\t    \t  return itm !== $scope.selectedOption.value; \n\n\t\t    \t});\n\n\n\t\t    \t  // $scope.optionSelected = false;\n\n\n\t\t   }\n\n\t\t    // \tif(!$scope.active_option.selected) {\n\n\t\t    // \t$scope.newinput.value.push($scope.selectedOption.value); \n\n\t\t    // \t} else {\n\n\t\t    // \t$scope.newinput.value = $scope.newinput.value.filter(function(itm, idx) {\n\n\t\t    // \t\treturn itm !== $scope.current_value; \n\n\t\t    // \t});\n\n\n\t\t    // }\n\t\t}\n\n\n\t\t    $scope.setOption = function(val) {\n\n\t\t    \tif(!val) return;\n\n\t\t    \tvar option = $scope.newinput.options.find(function(opt) {\n\t\t    \t\treturn opt.value == val;\n\t\t    \t});\n\n\t\t    \t$scope.active_option = angular.copy(option);\n\t\t    \t$scope.selectedOption = option;\n\t\t    }\n\n\n\n\t\t    $scope.updateOption = function() {\n\n\t\t    \tif($scope.option_form.option_text.$invalid) return;\n\n\t\t    \tif($scope.selectedOption) {\n\n\n\t\t    \t\t\tangular.copy($scope.active_option, $scope.selectedOption );\n\n\t\t    \t}\n\t\t    }\n\n\n\n\t\t    $scope.deleteOption = function() {\n\n\t\t    \tvar index = $scope.selectedOption.position - 1;\n\t\t    \t$scope.newinput.options.splice(index, 1 );\n\t\t    \t$scope.selectedOption = undefined;\n\t\t    \t$scope.newinput.value = null;\n\n\t\t    }\n\n\n\n\t\t    $scope.changeOptionPosition = function(active_option) {\n\n\n\t\t    \tvar index = $scope.selectedOption.position - 1;\n\t\t    \tvar new_index = active_option.position - 1;\n\n\n\t\t    \tif(new_index <= ($scope.newinput.options.length - 1)) {\n\n\t\t\t\t\t    $scope.newinput.options.splice(index, 1);\n\t\t\t\t\t    $scope.newinput.options.splice(new_index, 0, $scope.selectedOption);\n\t\t\t\t\t    $scope.selectedOption.position = (new_index + 1)\t\t    \t\n\t\t\t\t\t}\n\t\t    }\n\n\n\n\n\n\n\t\t    //condition creation functions\n\n\t\t    $scope.getPreceding = function(position) {\n\n\t\t    \tif(position > 1) {\n\n\t\t    \t\tvar preceding_inputs = container.inputs.filter(function(item, idx) {\n\t\t    \t\t\treturn item.position < position;\n\t\t    \t\t});\n\n\n\t\t    \t\treturn preceding_inputs;\n\n\t\t    \t}\n\t\t    }\n\n\n\n  \t\t}\n\n\n\n\n// '<div class=\"container\" flex-gt-xs=\"50\" ng-repeat=\"cc in con.child_containers\" ng-show=\"!cc.conditions ? true : checkEquality(cc)\"> <h5>{{cc.title}}</h5> <div class=\"cinput\" ng-repeat=\"inp in cc.inputs track by $index \" style=\"width:100%\"> <div class=\"position\">{{inp.position=$index+1}}</div> <div class=\"edit_button\" ng-click=\"tmp.addEditInput($event, cc, inp)\">edit</div> <div class=\"del_button\" ng-click=\"tmp.delInput($event, cc, $index)\">del</div> <md-input-container ng-if=\"inp.type == \\'text\\'\"> <input ng-init=\"input_name = (inp.type + \\'_\\' + inp.id); inputs.push(input_name)\" name=\"{{input_name}}\" ng-required=\"inp.disabled ? '' : inp.required \" ng-disabled=\"inp.disabled\" type=\"text\" ng-model=\"inp.value\" placeholder=\"{{inp.placeholder}}\"/> </md-input-container> <md-checkbox ng-init=\"input_name = (inp.type + \\'_\\' + inp.id); inputs.push(input_name);\" name=\"{{input_name}}\" ng-required=\"inp.disabled ? '' : inp.required \" ng-model=\"inp.value\"     ng-true-value=\"\\'true\\'\"ng-disabled=\"inp.disabled\" ng-if=\"inp.type == \\'checkbox\\'\" aria-label=\"{{inp.text}}\"> {{ inp.text }} </md-checkbox> <md-radio-group ng-init=\"input_name = (inp.type + \\'_\\' + inp.id); inputs.push(input_name)\" name=\"{{input_name}}\" ng-required=\"inp.disabled ? '' : inp.required \"  ng-disabled=\"inp.disabled\" ng-model=\"inp.value\" ng-if=\"inp.type == \\'radiogroup\\'\"> <md-radio-button ng-repeat=\"opt in inp.options\" value=\"{{opt.value}}\" class=\"md-primary\">{{opt.text}}</md-radio-button> </md-radio-group> <md-input-container ng-if=\"inp.type == \\'select\\'\"> <md-select placeholder=\"{{inp.placeholder}}\" ng-init=\"input_name = (inp.type + \\'_\\' + inp.id); inputs.push(input_name)\" name=\"{{input_name}}\" ng-required=\"inp.disabled ? '' : inp.required \"  ng-disabled=\"inp.disabled\" ng-model=\"inp.value\"> <md-option ng-repeat=\"opt in inp.options\" ng-value=\"opt.value\"> {{opt.text}} </md-option> </md-select> </md-input-container> <md-input-container style=\"max-width:100%\" ng-if=\"inp.type == \\'multiselect\\'\"> <label>{{inp.text}}</label> <md-select ng-disabled=\"inp.disabled\" ng-init=\"input_name = (inp.type + \\'_\\' + inp.id); inputs.push(input_name)\" name=\"{{input_name}}\" ng-required=\"inp.disabled ? '' : inp.required \"  ng-model=\"inp.value\"multiple> <md-optgroup label=\"stuff\"> <md-option ng-value=\"opt.value\" ng-repeat=\"opt in inp.options\">{{opt.text}}</md-option> </md-optgroup> </md-select> </md-input-container> <div class=\"tip\" ng-if=\"inp.tip\"> <label>Help:</label> <a ng-click=\"tmp.showTipDialog($event,inp.tip)\">{{inp.tip.label}}</a> </div> </div> <md-button ng-click=\"tmp.addEditInput($event,cc)\">+ input</md-button> <md-button>+ container</md-button></div>'\n\n}]).directive('recon',   function recursive_container() {\n    return {\n      template: '<div class=\"container\" ng-repeat=\"cc in containers\" ng-show=\"!cc.conditions ? true : tmp.checkEquality(cc)\"> <h5>{{cc.title}}</h5> <div class=\"cinput\" ng-repeat=\"inp in cc.inputs\" style=\"width:100%\"> <div class=\"position\">{{inp.position=$index+1}}</div> <div class=\"edit_button\" ng-click=\"tmp.addEditInput($event, cc, inp)\">edit</div> <div class=\"del_button\" ng-click=\"tmp.delInput($event, cc, $index)\">del</div> <md-input-container ng-if=\"inp.type == \\'text\\'\"> <input ng-init=\"input_name = (inp.type + \\'_\\' + inp.id); inputs.push(input_name)\" name=\"{{input_name}}\" ng-required=\"inp.disabled ? \\'\\' : inp.required \" ng-disabled=\"inp.disabled\" type=\"text\" ng-model=\"inp.value\" placeholder=\"{{inp.placeholder}}\"/> </md-input-container> <md-checkbox ng-init=\"input_name = (inp.type + \\'_\\' + inp.id); inputs.push(input_name);\" name=\"{{input_name}}\" ng-required=\"inp.disabled ? \\'\\' : inp.required \" ng-model=\"inp.value\"     ng-true-value=\"\\'true\\'\"ng-disabled=\"inp.disabled\" ng-if=\"inp.type == \\'checkbox\\'\" aria-label=\"{{inp.text}}\"> {{ inp.text }} </md-checkbox> <md-radio-group ng-init=\"input_name = (inp.type + \\'_\\' + inp.id); inputs.push(input_name)\" name=\"{{input_name}}\" ng-required=\"inp.disabled ? \\'\\' : inp.required \"  ng-disabled=\"inp.disabled\" ng-model=\"inp.value\" ng-if=\"inp.type == \\'radiogroup\\'\"> <md-radio-button ng-repeat=\"opt in inp.options\" value=\"{{opt.value}}\" class=\"md-primary\">{{opt.text}}</md-radio-button> </md-radio-group> <md-input-container ng-if=\"inp.type == \\'select\\'\"> <md-select placeholder=\"{{inp.placeholder}}\" ng-init=\"input_name = (inp.type + \\'_\\' + inp.id); inputs.push(input_name)\" name=\"{{input_name}}\" ng-required=\"inp.disabled ? \\'\\' : inp.required \"  ng-disabled=\"inp.disabled\" ng-model=\"inp.value\"> <md-option ng-repeat=\"opt in inp.options\" ng-value=\"opt.value\"> {{opt.text}} </md-option> </md-select> </md-input-container> <md-input-container style=\"max-width:100%\" ng-if=\"inp.type == \\'multiselect\\'\"> <label>{{inp.text}}</label> <md-select ng-disabled=\"inp.disabled\" ng-init=\"input_name = (inp.type + \\'_\\' + inp.id); inputs.push(input_name)\" name=\"{{input_name}}\" ng-required=\"inp.disabled ? \\'\\' : inp.required \"  ng-model=\"inp.value\"multiple> <md-optgroup label=\"stuff\"> <md-option ng-value=\"opt.value\" ng-repeat=\"opt in inp.options\">{{opt.text}}</md-option> </md-optgroup> </md-select> </md-input-container> <div class=\"tip\" ng-if=\"inp.tip\"> <label>Help:</label> <a ng-click=\"tmp.showTipDialog($event,inp.tip)\">{{inp.tip.label}}</a> </div> </div> <md-button ng-click=\"tmp.addEditInput($event,cc)\">+ input</md-button> <md-button>+ container</md-button><recon ctrl=\"tmp\" inputs=\"inputs\" containers=\"cc.child_containers\"></recon></div>',\n      scope: {\n        containers: '=',\n        tmp: '=ctrl',\n        inputs: '=inputs'\n      }\n    }\n  });\n\n\n","'use strict';\n\nangular.module('header').controller('headerController',['$scope','$http', function($scope, $http) {\n\nvar vm = this;\n\n}]);\n","'use strict';\n\nangular.module('pawnengine_admin').controller('rootController',['$scope','$http','$mdDialog', function($scope, $http, $mdDialog) {\n\nvar vm = this;\n\n  $scope.showConfirm = function(ev, title) {\n    // Appending dialog to document.body to cover sidenav in docs app\n    var confirm = $mdDialog.confirm()\n          .title(title)\n          .ariaLabel('Delete Input')\n          .targetEvent(ev)\n          .ok('OK')\n          .cancel('Cancel');\n\n    return $mdDialog.show(confirm);\n\n}\n\n\n\n}]);\n"],"sourceRoot":"/source/"}